<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'Edad': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'Sexo': &quot;['Hombre', 'Mujer', 'Otro']&quot;}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1536, 864]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="tarea_iceberg" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="control">
      <RoutineSettingsComponent name="control" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="control" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="control_r1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda1 === &quot;control&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda1==&quot;control&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="control_r1" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_control_r1" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_control_r1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="mar1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="mar_movie = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_videomar, # Ruta al archivo de video&amp;#10;    size=(1900,1200),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=True                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="mar_movie = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_videomar, &quot;size&quot;: [1900, 1200], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: true});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar1" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="music">
      <RoutineSettingsComponent name="music" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="music_r1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda1 === &quot;music&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda1==&quot;music&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="music_r1" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_music_r1" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_music_r1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_sound = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicafondo, # Ruta al archivo de video&amp;#10;    size=(20, 20),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_sound = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicafondo, &quot;size&quot;: [20, 20], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_2.thisN === 0)) {&amp;#10;    background_sound.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_2.thisN == 0:&amp;#10;    background_sound.play()        " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_sound.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_sound.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_2.thisN === (nRows - 1))) {&amp;#10;    background_sound.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_2.thisN == nRows-1:&amp;#10;    background_sound.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="music_words">
      <RoutineSettingsComponent name="music_words" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music_words" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="musicw_r1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda1 === &quot;music_words&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda1==&quot;music_words&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="musicw_r1" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_movie = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicaletra , # Ruta al archivo de video&amp;#10;    size=(10,10),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_movie = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicaletra, &quot;size&quot;: [10, 10], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_3.thisN === 0)) {&amp;#10;    background_movie.play();&amp;#10;    background_movie.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_3.thisN == 0:&amp;#10;    background_movie.play()&amp;#10;    background_movie.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_movie.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_3.thisN === (nRows - 1))) {&amp;#10;    background_movie.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_3.thisN == nRows-1:&amp;#10;    background_movie.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_musicw_r1" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_musicw_r1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions2">
      <RoutineSettingsComponent name="instructions2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instructions2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="¡Empezamos la segunda ronda!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions3">
      <RoutineSettingsComponent name="instructions3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instructions3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="¡empezamos la tercera ronda!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="videonotworking">
      <RoutineSettingsComponent name="videonotworking" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="videonotworking" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_X" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#background_sound = visual.MovieStim('imgs/song_titanic.mp4')&amp;#10;#background_sound = sound.Sound('imgs/song_titanic.mp4')&amp;#10;#myMovie.movie = 'imgs/song_titanic.mp4'&amp;#10;&amp;#10;background_movie2 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename='imgs/video_celine.mp4', # Ruta al archivo de video&amp;#10;    size=(1000, 1000),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_movie2 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: &quot;imgs/video_celine.mp4&quot;, &quot;size&quot;: [1000, 1000], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_4.thisN === 0)) {&amp;#10;    background_movie2.play();&amp;#10;    background_movie2.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_4.thisN == 0:&amp;#10;    background_movie2.play()&amp;#10;    background_movie2.draw()&amp;#10;    #background_sound.pos(0,0)&amp;#10;    #background_sound.size(0.1, 0.1)&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_movie2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_movie2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_4.thisN === 1)) {&amp;#10;    background_movie2.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_4.thisN == 1:&amp;#10;    background_movie2.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_X" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_4" plugin="None">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="music_video">
      <RoutineSettingsComponent name="music_video" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music_video" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="musicv_r1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda1 === &quot;music_video&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda1==&quot;music_video&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="musicv_r1" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_2_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_movie2 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicaletra , # Ruta al archivo de video&amp;#10;    size=(10,10),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_movie2 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicaletra, &quot;size&quot;: [10, 10], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_4.thisN === 0)) {&amp;#10;    background_movie2.play();&amp;#10;    background_movie2.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_4.thisN == 0:&amp;#10;    background_movie2.play()&amp;#10;    background_movie2.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_movie2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_movie2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_4.thisN === (nRows - 1))) {&amp;#10;    background_movie2.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_4.thisN == nRows-1:&amp;#10;    background_movie2.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="displayed_movie = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_pelicula, # Ruta al archivo de video&amp;#10;    size=(500,350),               # Tamaño del video (opcional)&amp;#10;    pos=(0,-350),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="displayed_movie = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_pelicula, &quot;size&quot;: [500, 350], &quot;pos&quot;: [0, (- 350)], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_4.thisN === 0)) {&amp;#10;    displayed_movie.play();&amp;#10;    displayed_movie.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_4.thisN == 0:&amp;#10;    displayed_movie.play()&amp;#10;    displayed_movie.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="displayed_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="displayed_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_4.thisN === (nRows - 1))) {&amp;#10;    displayed_movie.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_4.thisN == nRows-1:&amp;#10;    displayed_movie.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_musicv_r1" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_musicv_r1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions4">
      <RoutineSettingsComponent name="instructions4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instructions4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="¡última ronda!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="final">
      <RoutineSettingsComponent name="final" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="final" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="¡Muchas gracias por participar!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions">
      <RoutineSettingsComponent name="instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_5" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="En este experiemento te verás navegando por el mar...&amp;#10;&amp;#10;¡Pero hay icebergs que aparcerán de repente en pantalla!&amp;#10;&amp;#10;Cuando veas uno, debes pulsar &quot;SPACE&quot; lo más rápido posible.&amp;#10;&amp;#10;Hay 4 rondas.&amp;#10;&amp;#10;Cuando estés listo, aprieta &quot;SPACE&quot; para empezar." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="portada">
      <RoutineSettingsComponent name="portada" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="portada" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="image_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/logo_OB.jpeg" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.6, 0.7)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="text_6" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="¡Bienvenido a un experimento de Open Brains!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="random_routines">
      <RoutineSettingsComponent name="random_routines" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="random_routines" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_4" plugin="None">
        <Param val="control_started = False&amp;#10;music_started = False&amp;#10;music_words_started = False&amp;#10;music_video_started = False" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="control_started = false;&amp;#10;music_started = false;&amp;#10;music_words_started = false;&amp;#10;music_video_started = false;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="control_started = False&amp;#10;music_started = False&amp;#10;music_words_started = False&amp;#10;music_video_started = False" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="control_started = false;&amp;#10;music_started = false;&amp;#10;music_words_started = false;&amp;#10;music_video_started = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="currentRoutine = &quot;a&quot;;&amp;#10;TextoRonda = &quot;Nueva ronda&quot;;&amp;#10;continueRoutine = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Retrieve the name of the next routine from the loop&amp;#10;#currentRoutine = routineName&amp;#10;#print(currentRoutine)&amp;#10;&amp;#10;currentRoutine = &quot;a&quot;&amp;#10;# Immediately end this routine to skip it visually&amp;#10;#roundNumber = 1&amp;#10;#TextoRonda=&quot;Ronda&quot; + str(roundNumber) + &quot;/4&quot;;&amp;#10;&amp;#10;TextoRonda=&quot;Nueva ronda&quot;&amp;#10;&amp;#10;continueRoutine = False&amp;#10;    &amp;#10; &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((currentRoutine === &quot;control&quot;)) {&amp;#10;    psychoJS.experiment.addData(&quot;executedRoutine&quot;, &quot;control&quot;);&amp;#10;    control_started = true;&amp;#10;    music_started = false;&amp;#10;    music_words_started = false;&amp;#10;    music_video_started = false;&amp;#10;}&amp;#10;if ((currentRoutine === &quot;music&quot;)) {&amp;#10;    psychoJS.experiment.addData(&quot;executedRoutine&quot;, &quot;music&quot;);&amp;#10;    control_started = false;&amp;#10;    music_started = true;&amp;#10;    music_words_started = false;&amp;#10;    music_video_started = false;&amp;#10;}&amp;#10;if ((currentRoutine === &quot;music_words&quot;)) {&amp;#10;    psychoJS.experiment.addData(&quot;executedRoutine&quot;, &quot;music_words&quot;);&amp;#10;    control_started = false;&amp;#10;    music_started = false;&amp;#10;    music_words_started = true;&amp;#10;    music_video_started = false;&amp;#10;}&amp;#10;if ((currentRoutine === &quot;music_video&quot;)) {&amp;#10;    psychoJS.experiment.addData(&quot;executedRoutine&quot;, &quot;music_video&quot;);&amp;#10;    control_started = false;&amp;#10;    music_started = false;&amp;#10;    music_words_started = false;&amp;#10;    music_video_started = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Check which routine should run next and set a flag for it&amp;#10;# Increment the counter or round number&amp;#10;#roundNumber = roundNumber + 1&amp;#10;&amp;#10;if currentRoutine == 'control':&amp;#10;    thisExp.addData('executedRoutine', 'control')&amp;#10;    control_started = True&amp;#10;    music_started = False&amp;#10;    music_words_started = False&amp;#10;    music_video_started = False&amp;#10;if currentRoutine == 'music':&amp;#10;    thisExp.addData('executedRoutine', 'music')&amp;#10;    control_started = False&amp;#10;    music_started = True&amp;#10;    music_words_started = False&amp;#10;    music_video_started = False&amp;#10;if currentRoutine == 'music_words':&amp;#10;    thisExp.addData('executedRoutine', 'music_words')&amp;#10;    control_started = False&amp;#10;    music_started = False&amp;#10;    music_words_started = True&amp;#10;    music_video_started = False&amp;#10;if currentRoutine == 'music_video':&amp;#10;    thisExp.addData('executedRoutine', 'music_video')&amp;#10;    control_started = False&amp;#10;    music_started = False&amp;#10;    music_words_started = False&amp;#10;    music_video_started = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Ronda_1">
      <RoutineSettingsComponent name="Ronda_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Ronda_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_7" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Ronda 1/4" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="codigos_generales" plugin="None">
        <Param val="path_videomar = 'imgs/video_mar_luis.mp4' #'imgs/marluis.mp4' #'imgs/video_mar.mp4'&amp;#10;path_musicafondo = 'imgs/song_titanic.mp4'&amp;#10;path_musicaletra = 'imgs/titanic_spanish.mp4'&amp;#10;path_pelicula = 'imgs/titanic.mp4'&amp;#10;&amp;#10;nRows = 10&amp;#10;totalRows = 195  # Replace with the total number of rows in your Excel file&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="path_videomar = &quot;imgs/video_mar_luis.mp4&quot;;&amp;#10;path_musicafondo = &quot;imgs/song_titanic.mp4&quot;;&amp;#10;path_musicaletra = &quot;imgs/titanic_spanish.mp4&quot;;&amp;#10;path_pelicula = &quot;imgs/titanic.mp4&quot;;&amp;#10;nRows = 10;&amp;#10;totalRows = 195;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import random &amp;#10;# Lista de nombres de rutinas&amp;#10;rutinas = [&quot;control&quot;, &quot;music&quot;, &quot;music_words&quot;, &quot;music_video&quot;]&amp;#10;# Barajar el orden de las rutinas&amp;#10;random.shuffle(rutinas)&amp;#10;print(rutinas)&amp;#10;&amp;#10;# Un índice para seguir qué rutina ejecutar&amp;#10;ronda1=rutinas[0]&amp;#10;ronda2=rutinas[1]&amp;#10;ronda3=rutinas[2]&amp;#10;ronda4=rutinas[3]&amp;#10;&amp;#10;thisExp.addData('ronda1', ronda1)&amp;#10;thisExp.addData('ronda2', ronda2)&amp;#10;thisExp.addData('ronda3', ronda3)&amp;#10;thisExp.addData('ronda4', ronda4)&amp;#10;&amp;#10;#ronda1=&quot;music_video&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;rutinas = [&quot;control&quot;, &quot;music&quot;, &quot;music_words&quot;, &quot;music_video&quot;];&amp;#10;Math.random.shuffle(rutinas);&amp;#10;console.log(rutinas);&amp;#10;ronda1 = rutinas[0];&amp;#10;ronda2 = rutinas[1];&amp;#10;ronda3 = rutinas[2];&amp;#10;ronda4 = rutinas[3];&amp;#10;psychoJS.experiment.addData(&quot;ronda1&quot;, ronda1);&amp;#10;psychoJS.experiment.addData(&quot;ronda2&quot;, ronda2);&amp;#10;psychoJS.experiment.addData(&quot;ronda3&quot;, ronda3);&amp;#10;psychoJS.experiment.addData(&quot;ronda4&quot;, ronda4);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="selectedRows = Math.random.sample(util.range(totalRows), nRows);&amp;#10;selectedRowsStr = function () {&amp;#10;    var _pj_a = [], _pj_b = selectedRows;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(i);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="selectedRows = random.sample(range(totalRows), nRows)&amp;#10;selectedRowsStr = [i for i in selectedRows]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="codigos_generales" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Ronda_2">
      <RoutineSettingsComponent name="Ronda_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Ronda_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_8" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Ronda 2/4" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_15" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="selectedRows = Math.random.sample(util.range(totalRows), nRows);&amp;#10;selectedRowsStr_r2 = function () {&amp;#10;    var _pj_a = [], _pj_b = selectedRows;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(i);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="selectedRows = random.sample(range(totalRows), nRows)&amp;#10;selectedRowsStr_r2 = [i for i in selectedRows]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_15" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="control2">
      <RoutineSettingsComponent name="control2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="control2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="control_r2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda2 === &quot;control&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda2==&quot;control&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="control_r2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_control_r2" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_control_r2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="mar_1_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="mar_movie = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_videomar, # Ruta al archivo de video&amp;#10;    size=(1900,1200),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=True                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="mar_movie = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_videomar, &quot;size&quot;: [1900, 1200], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: true});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar_1_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="music2">
      <RoutineSettingsComponent name="music2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="music_r2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda2 === &quot;music&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda2==&quot;music&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="music_r2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_music_r2" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_music_r2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_sound_r2 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicafondo, # Ruta al archivo de video&amp;#10;    size=(20, 20),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_sound_r2 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicafondo, &quot;size&quot;: [20, 20], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_6.thisN === 0)) {&amp;#10;    background_sound_r2.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_6.thisN == 0:&amp;#10;    background_sound_r2.play()        " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_sound_r2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_sound_r2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_6.thisN === (nRows - 1))) {&amp;#10;    background_sound_r2.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_6.thisN == nRows-1:&amp;#10;    background_sound_r2.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar2_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar2_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="music_words2">
      <RoutineSettingsComponent name="music_words2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music_words2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="musicw_r2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda2 === &quot;music_words&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda2==&quot;music_words&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="musicw_r2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_movie_r2 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicaletra , # Ruta al archivo de video&amp;#10;    size=(10,10),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_movie_r2 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicaletra, &quot;size&quot;: [10, 10], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_7.thisN === 0)) {&amp;#10;    background_movie_r2.play();&amp;#10;    background_movie_r2.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_7.thisN == 0:&amp;#10;    background_movie_r2.play()&amp;#10;    background_movie_r2.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_movie_r2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_movie_r2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_7.thisN === (nRows - 1))) {&amp;#10;    background_movie_r2.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_7.thisN == nRows-1:&amp;#10;    background_movie_r2.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar3_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar3_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_musicw_r2" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_musicw_r2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="music_video2">
      <RoutineSettingsComponent name="music_video2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music_video2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="musicv_r2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda2 === &quot;music_video&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda2==&quot;music_video&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="musicv_r2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_2_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="backgroung_movie2_r2 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicaletra , # Ruta al archivo de video&amp;#10;    size=(10,10),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="backgroung_movie2_r2 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicaletra, &quot;size&quot;: [10, 10], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_8.thisN === 0)) {&amp;#10;    backgroung_movie2_r2.play();&amp;#10;    backgroung_movie2_r2.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_8.thisN == 0:&amp;#10;    backgroung_movie2_r2.play()&amp;#10;    backgroung_movie2_r2.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="backgroung_movie2_r2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="backgroung_movie2_r2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_8.thisN === (nRows - 1))) {&amp;#10;    backgroung_movie2_r2.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_8.thisN == nRows-1:&amp;#10;    backgroung_movie2_r2.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar4_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar4_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="displayed_movie_r2 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_pelicula, # Ruta al archivo de video&amp;#10;    size=(500,350),               # Tamaño del video (opcional)&amp;#10;    pos=(0,-350),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="displayed_movie_r2 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_pelicula, &quot;size&quot;: [500, 350], &quot;pos&quot;: [0, (- 350)], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_8.thisN === 0)) {&amp;#10;    displayed_movie_r2.play();&amp;#10;    displayed_movie_r2.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_8.thisN == 0:&amp;#10;    displayed_movie_r2.play()&amp;#10;    displayed_movie_r2.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="displayed_movie_r2.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="displayed_movie_r2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_8.thisN === (nRows - 1))) {&amp;#10;    displayed_movie_r2.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_8.thisN == nRows-1:&amp;#10;    displayed_movie_r2.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_musicv_r2" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_musicv_r2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Ronda_3">
      <RoutineSettingsComponent name="Ronda_3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Ronda_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_9" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Ronda 3/4" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_16" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="selectedRows = Math.random.sample(util.range(totalRows), nRows);&amp;#10;selectedRowsStr_r3 = function () {&amp;#10;    var _pj_a = [], _pj_b = selectedRows;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(i);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="selectedRows = random.sample(range(totalRows), nRows)&amp;#10;selectedRowsStr_r3 = [i for i in selectedRows]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_16" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="control3">
      <RoutineSettingsComponent name="control3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="control3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="control_r3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda3 === &quot;control&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda3==&quot;control&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="control_r3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_10" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_control_r3" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_control_r3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="mar_1_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="mar_movie = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_videomar, # Ruta al archivo de video&amp;#10;    size=(1900,1200),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=True                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="mar_movie = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_videomar, &quot;size&quot;: [1900, 1200], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: true});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar_1_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="music3">
      <RoutineSettingsComponent name="music3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="music_r3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda3 === &quot;music&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda3==&quot;music&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="music_r3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_11" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_music_r3" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_music_r3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_sound_r3 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicafondo, # Ruta al archivo de video&amp;#10;    size=(20, 20),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_sound_r3 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicafondo, &quot;size&quot;: [20, 20], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_10.thisN === 0)) {&amp;#10;    background_sound_r3.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_10.thisN == 0:&amp;#10;    background_sound_r3.play()        " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_sound_r3.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_sound_r3.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_10.thisN === (nRows - 1))) {&amp;#10;    background_sound_r3.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_10.thisN == nRows-1:&amp;#10;    background_sound_r3.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar2_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar2_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="music_words3">
      <RoutineSettingsComponent name="music_words3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music_words3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="musicw_r3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda3 === &quot;music_words&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda3==&quot;music_words&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="musicw_r3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_movie_r3 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicaletra , # Ruta al archivo de video&amp;#10;    size=(10,10),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_movie_r3 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicaletra, &quot;size&quot;: [10, 10], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_11.thisN === 0)) {&amp;#10;    background_movie_r3.play();&amp;#10;    background_movie_r3.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_11.thisN == 0:&amp;#10;    background_movie_r3.play()&amp;#10;    background_movie_r3.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_movie_r3.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_movie_r3.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_11.thisN === (nRows - 1))) {&amp;#10;    background_movie_r3.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_11.thisN == nRows-1:&amp;#10;    background_movie_r3.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar3_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar3_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_12" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_12" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_musicw_r3" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_musicw_r3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="music_video3">
      <RoutineSettingsComponent name="music_video3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music_video3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="musicv_r3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda3 === &quot;music_video&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda3==&quot;music_video&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="musicv_r3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_2_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="backgroung_movie2_r3 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicaletra , # Ruta al archivo de video&amp;#10;    size=(10,10),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="backgroung_movie2_r3 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicaletra, &quot;size&quot;: [10, 10], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_12.thisN === 0)) {&amp;#10;    backgroung_movie2_r3.play();&amp;#10;    backgroung_movie2_r3.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_12.thisN == 0:&amp;#10;    backgroung_movie2_r3.play()&amp;#10;    backgroung_movie2_r3.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="backgroung_movie2_r3.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="backgroung_movie2_r3.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_12.thisN === (nRows - 1))) {&amp;#10;    backgroung_movie2_r3.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_12.thisN == nRows-1:&amp;#10;    backgroung_movie2_r3.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar4_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar4_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_11" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="displayed_movie_r3 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_pelicula, # Ruta al archivo de video&amp;#10;    size=(500,350),               # Tamaño del video (opcional)&amp;#10;    pos=(0,-350),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="displayed_movie_r3 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_pelicula, &quot;size&quot;: [500, 350], &quot;pos&quot;: [0, (- 350)], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_12.thisN === 0)) {&amp;#10;    displayed_movie_r3.play();&amp;#10;    displayed_movie_r3.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_12.thisN == 0:&amp;#10;    displayed_movie_r3.play()&amp;#10;    displayed_movie_r3.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="displayed_movie_r3.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="displayed_movie_r3.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_12.thisN === (nRows - 1))) {&amp;#10;    displayed_movie_r3.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_12.thisN == nRows-1:&amp;#10;    displayed_movie_r3.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_13" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_13" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_musicv_r3" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_musicv_r3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Ronda_4">
      <RoutineSettingsComponent name="Ronda_4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Ronda_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_10" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Ronda 4/4" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_17" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="selectedRows = Math.random.sample(util.range(totalRows), nRows);&amp;#10;selectedRowsStr_r4 = function () {&amp;#10;    var _pj_a = [], _pj_b = selectedRows;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(i);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="selectedRows = random.sample(range(totalRows), nRows)&amp;#10;selectedRowsStr_r4 = [i for i in selectedRows]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_17" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="control4">
      <RoutineSettingsComponent name="control4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="control4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="control_r4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda4 === &quot;control&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda4==&quot;control&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="control_r4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_14" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_14" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_control_r4" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_control_r4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="mar_1_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="mar_movie = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_videomar, # Ruta al archivo de video&amp;#10;    size=(1900,1200),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=True                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="mar_movie = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_videomar, &quot;size&quot;: [1900, 1200], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: true});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar_1_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="music4">
      <RoutineSettingsComponent name="music4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="music_r4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda4 === &quot;music&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda4==&quot;music&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="music_r4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_15" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_15" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_music_r4" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_music_r4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_12" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_sound_r4 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicafondo, # Ruta al archivo de video&amp;#10;    size=(20, 20),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_sound_r4 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicafondo, &quot;size&quot;: [20, 20], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_14.thisN === 0)) {&amp;#10;    background_sound_r4.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_14.thisN == 0:&amp;#10;    background_sound_r4.play()        " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_sound_r4.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_sound_r4.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_14.thisN === (nRows - 1))) {&amp;#10;    background_sound_r4.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_14.thisN == nRows-1:&amp;#10;    background_sound_r4.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar2_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar2_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="music_words4">
      <RoutineSettingsComponent name="music_words4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music_words4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="musicw_r4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda4 === &quot;music_words&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda4==&quot;music_words&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="musicw_r4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_13" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="background_movie_r4 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicaletra , # Ruta al archivo de video&amp;#10;    size=(10,10),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="background_movie_r4 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicaletra, &quot;size&quot;: [10, 10], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_15.thisN === 0)) {&amp;#10;    background_movie_r4.play();&amp;#10;    background_movie_r4.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_15.thisN == 0:&amp;#10;    background_movie_r4.play()&amp;#10;    background_movie_r4.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="background_movie_r4.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="background_movie_r4.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_15.thisN === (nRows - 1))) {&amp;#10;    background_movie_r4.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_15.thisN == nRows-1:&amp;#10;    background_movie_r4.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_13" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar_3_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar_3_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_16" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_16" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_musicw_r4" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_musicw_r4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="music_video4">
      <RoutineSettingsComponent name="music_video4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="music_video4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="musicv_r4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((ronda4 === &quot;music_video&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ronda4==&quot;music_video&quot;:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="musicv_r4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_2_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="backgroung_movie2_r4 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_musicaletra , # Ruta al archivo de video&amp;#10;    size=(10,10),               # Tamaño del video (opcional)&amp;#10;    pos=(0,0),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="backgroung_movie2_r4 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_musicaletra, &quot;size&quot;: [10, 10], &quot;pos&quot;: [0, 0], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_16.thisN === 0)) {&amp;#10;    backgroung_movie2_r4.play();&amp;#10;    backgroung_movie2_r4.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_16.thisN == 0:&amp;#10;    backgroung_movie2_r4.play()&amp;#10;    backgroung_movie2_r4.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="backgroung_movie2_r4.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="backgroung_movie2_r4.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_16.thisN === (nRows - 1))) {&amp;#10;    backgroung_movie2_r4.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_16.thisN == nRows-1:&amp;#10;    backgroung_movie2_r4.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="mar4_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="mar_movie.play();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="mar_movie.play()  &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="mar_movie.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="mar_movie.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="mar4_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_14" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="displayed_movie_r4 = visual.MovieStim3(&amp;#10;    win=win,                        # Ventana en la que se va a mostrar el video&amp;#10;    filename=path_pelicula, # Ruta al archivo de video&amp;#10;    size=(500,350),               # Tamaño del video (opcional)&amp;#10;    pos=(0,-350),&amp;#10;    flipVert=False,                 # Si se debe voltear verticalmente&amp;#10;    flipHoriz=False,                # Si se debe voltear horizontalmente&amp;#10;    loop=False                      # Si el video debe repetirse&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="displayed_movie_r4 = new visual.MovieStim3({&quot;win&quot;: psychoJS.window, &quot;filename&quot;: path_pelicula, &quot;size&quot;: [500, 350], &quot;pos&quot;: [0, (- 350)], &quot;flipVert&quot;: false, &quot;flipHoriz&quot;: false, &quot;loop&quot;: false});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_16.thisN === 0)) {&amp;#10;    displayed_movie_r4.play();&amp;#10;    displayed_movie_r4.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_16.thisN == 0:&amp;#10;    displayed_movie_r4.play()&amp;#10;    displayed_movie_r4.draw()    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="displayed_movie_r4.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="displayed_movie_r4.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((trials_16.thisN === (nRows - 1))) {&amp;#10;    displayed_movie_r4.stop();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if trials_16.thisN == nRows-1:&amp;#10;    displayed_movie_r4.stop()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_14" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_17" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="imgs/iceberg.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_17" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$[posx, posy]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="resp_musicv_r4" plugin="None">
        <Param val="'space'" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="resp_musicv_r4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$timepresentation" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="portada"/>
    <Routine name="instructions"/>
    <Routine name="Ronda_1"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="control"/>
    <LoopTerminator name="trials"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music"/>
    <LoopTerminator name="trials_2"/>
    <LoopInitiator loopType="TrialHandler" name="trials_3">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music_words"/>
    <LoopTerminator name="trials_3"/>
    <LoopInitiator loopType="TrialHandler" name="trials_4">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music_video"/>
    <LoopTerminator name="trials_4"/>
    <Routine name="Ronda_2"/>
    <LoopInitiator loopType="TrialHandler" name="trials_5">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r2" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_5" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="control2"/>
    <LoopTerminator name="trials_5"/>
    <LoopInitiator loopType="TrialHandler" name="trials_6">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r2" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_6" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music2"/>
    <LoopTerminator name="trials_6"/>
    <LoopInitiator loopType="TrialHandler" name="trials_7">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r2" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_7" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music_words2"/>
    <LoopTerminator name="trials_7"/>
    <LoopInitiator loopType="TrialHandler" name="trials_8">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r2" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_8" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music_video2"/>
    <LoopTerminator name="trials_8"/>
    <Routine name="Ronda_3"/>
    <LoopInitiator loopType="TrialHandler" name="trials_9">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r3" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_9" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="control3"/>
    <LoopTerminator name="trials_9"/>
    <LoopInitiator loopType="TrialHandler" name="trials_10">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r3" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_10" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music3"/>
    <LoopTerminator name="trials_10"/>
    <LoopInitiator loopType="TrialHandler" name="trials_11">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r3" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_11" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music_words3"/>
    <LoopTerminator name="trials_11"/>
    <LoopInitiator loopType="TrialHandler" name="trials_12">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r3" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_12" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music_video3"/>
    <LoopTerminator name="trials_12"/>
    <Routine name="Ronda_4"/>
    <LoopInitiator loopType="TrialHandler" name="trials_13">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r4" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_13" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="control4"/>
    <LoopTerminator name="trials_13"/>
    <LoopInitiator loopType="TrialHandler" name="trials_14">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r4" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_14" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music4"/>
    <LoopTerminator name="trials_14"/>
    <LoopInitiator loopType="TrialHandler" name="trials_15">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r4" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_15" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music_words4"/>
    <LoopTerminator name="trials_15"/>
    <LoopInitiator loopType="TrialHandler" name="trials_16">
      <Param name="Selected rows" updates="None" val="$selectedRowsStr_r4" valType="str"/>
      <Param name="conditions" updates="None" val="[{'timepresentation': 3, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.7, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': -0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.1, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.2, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.3, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.4, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.5, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.6, 'posy': 0.05}, {'timepresentation': 3, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 4, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 5, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 6, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 7, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 8, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 9, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 10, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 11, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 12, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 13, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 14, 'posx': 0.7, 'posy': 0.05}, {'timepresentation': 15, 'posx': 0.7, 'posy': 0.05}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="imgs/iceberg_times.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_16" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="music_video4"/>
    <LoopTerminator name="trials_16"/>
    <Routine name="final"/>
  </Flow>
</PsychoPy2experiment>
